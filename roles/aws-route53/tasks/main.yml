---
# aws-route53 task main.yml


- name: Get the VPC ID for {{ ec2_name_prefix }}
  ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ ec2_name_prefix }}-vpc"
    region: "{{ ec2_region }}"
  register: _vpc_net_facts
  run_once: yes

- name: debug vpc facts
  debug:
    msg: "{{ _vpc_net_facts }}"
    verbosity: 2
  run_once: yes

- name: create private zone and add to VPC
  route53_zone:
    zone: "{{ aws_route53_private_zone }}"
    state: present 
    vpc_id: "{{ _vpc_net_facts.vpcs[0].id }}"
    vpc_region: "{{ aws_region }}"
  run_once: yes
  register: _private_zone  

- name: debug private zone
  debug:
    msg: "{{ _private_zone }}"
    verbosity: 2
  run_once: yes

- name: route53 public IP address registration
  route53:
    state: present 
    record: "{{ hostvars[inventory_hostname].tags.Name }}.{{ aws_route53_public_zone }}"
    ttl: "300"
    type: A
    wait: yes
    value: "{{ hostvars[inventory_hostname].public_ip_address }}"
    zone: "{{ aws_route53_public_zone }}"
    overwrite: yes
  when: hostvars[inventory_hostname].tags.Name is defined and 
      hostvars[inventory_hostname].public_ip_address is defined

- name: route53 private IP address registration
  route53:
    state: present 
    record: "{{ hostvars[inventory_hostname].tags.Name }}.{{ aws_route53_private_zone }}"
    ttl: "300"
    type: A
    wait: yes
    value: "{{ hostvars[inventory_hostname].private_ip_address }}"
    zone: "{{ aws_route53_private_zone }}"
    overwrite: yes
    private_zone: yes
  when: hostvars[inventory_hostname].tags.Name is defined and 
      hostvars[inventory_hostname].private_ip_address is defined